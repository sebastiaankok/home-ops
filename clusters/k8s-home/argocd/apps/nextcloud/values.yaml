#lifecycle:
#  postStartCommand:
#    - "/bin/sh"
#    - "-c"
#    - "apk add gcompat ffmpeg"
image:
  repository: public.ecr.aws/docker/library/nextcloud
  tag: 29.0.1-fpm
nextcloud:
  host: nextcloud.example.com
  extraVolumes:
    - name: dl-binary-map
      hostPath:
        path: /data/nextcloud/binary/ffmpeg
        type: FileOrCreate
  extraVolumeMounts:
    - name: dl-binary-map
      mountPath: /usr/local/bin/ffmpeg
        #securityContext:
        #runAsUser: 82
      #runAsGroup: 1000
      #runAsNonRoot: true
      #readOnlyRootFilesystem: false
  existingSecret:
    enabled: true
    secretName: nextcloud-secret
    usernameKey: admin
    passwordKey: admin-pass
    tokenKey: metric-token
    #smtpHostKey: SMTP_HOST
    #smtpUsernameKey: SMTP_USERNAME
    #smtpPasswordKey: SMTP_PASSWORD
  mail:
    enabled: false
      #fromAddress: files
      #domain: "${SECRET_DOMAIN}"
      #smtp:
      #  secure: ssl
      #  port: 465
      #  authtype: LOGIN
  configs:
    local.config.php: |-
      <?php
      $CONFIG = array (
        'trusted_proxies' =>
        array (
          0 => '127.0.0.1',
          1 => '172.16.0.0/16',
          2 => '10.0.0.0/16',
        ),
        'forwarded_for_headers' =>
        array (
          0 => 'HTTP_X_FORWARDED_FOR',
        ),
        'default_phone_region' => 'NL',
        'trashbin_retention_obligation' => 'auto, 30',
        'auth.bruteforce.protection.enabled' => true,
      );
  phpConfigs:
    uploadLimit.ini: |
      upload_max_filesize = 16G
      post_max_size = 16G
      max_input_time = 3600
      max_execution_time = 3600
    www.conf: |
      [www]
      user = www-data
      group = www-data
      listen = 127.0.0.1:9000
      pm = dynamic
      pm.max_children = 57
      pm.start_servers = 14
      pm.min_spare_servers = 14
      pm.max_spare_servers = 42
      pm.max_requests = 500
      pm.process_idle_timeout = 10s
persistence:
  enabled: true
  existingClaim: hostpath-nextcloud-pvc
resources:
  requests:
    cpu: 200m
    memory: 1000Mi
  limits:
    memory: 6000Mi
startupProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 360
  successThreshold: 1
livenessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
ingress:
  enabled: true
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dns
    nginx.ingress.kubernetes.io/custom-http-errors: "418"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "500m"
      #nginx.ingress.kubernetes.io/server-snippet: |-
      #  server_tokens off;
      #  proxy_hide_header X-Powered-By;
      #  rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
      #  rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
      #  rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
      #  rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
      #  location = /.well-known/carddav {
      #    return 301 $scheme://$host/remote.php/dav;
      #  }
      #  location = /.well-known/caldav {
      #    return 301 $scheme://$host/remote.php/dav;
      #  }
      #  location = /robots.txt {
      #    allow all;
      #    log_not_found off;
      #    access_log off;
      #  }
      #  location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
      #    deny all;
      #  }
      #  location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
      #    deny all;
      #  }
  tls:
    - hosts:
        - nextcloud.example.com
      secretName: nextcloud-otohgunga-tls

nginx:
  enabled: true
  image:
    repository: public.ecr.aws/nginx/nginx
  config:
    default: true
      #securityContext:
      #  runAsGroup: 1000
  resources:
    requests:
      cpu: 50m
      memory: 20Mi
    limits:
      memory: 100Mi

##
postgresql:
  enabled: false

internalDatabase:
  enabled: false
externalDatabase:
  enabled: true
  type: postgresql
  database: nextcloud
  existingSecret:
    enabled: true
    secretName: nextcloud-secret
    hostKey: postgres-host
    databaseKey: postgres-database
    usernameKey: postgres-user
    passwordKey: postgres-password

redis:
  enabled: false
  architecture: standalone
  auth:
    enabled: true
    existingSecret: nextcloud-secret
    existingSecretPasswordKey: redis-pass
  master:
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        memory: 100Mi
  commonConfiguration: |-
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
    maxmemory 94371840
    maxmemory-policy allkeys-lru
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
      limits:
        memory: 20Mi

metrics:
  enabled: false
  https: true
  serviceMonitor:
    enabled: false

cronjob:
  enabled: true
  annotations: {}
  curlInsecure: false
  enabled: true
  failedJobsHistoryLimit: 5
  image: {}
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 2
    #securityContext:
    #  runAsUser: 82
    #  runAsGroup: 1000

    #securityContext:
    #  fsGroupChangePolicy: OnRootMismatch
